Can we make the operators a const function?,"No, they are not members."
How to convert them into the versions with only one parameter?,"No, we cannot. The first parameter is not 'this'."
What is enumeration?,"An enumeration in C++ is a user-defined data type that consists of a set of named integer constants, which are called enumerators. It is used to assign names to a set of integral values to make a program more readable and maintainable."
What is the difference between unscoped and scoped enumerations?,"Unscoped 'enum's are accessible, scoped are not. The general notation for scoped ones is 'enum {a, b, c};'. To access these values, we need to use the scope resolution operator, so 'typename::value'."
"What are the values in the enumeration below? `enum x {a, b=3, c, d=6, e};`","a is assigned to 0; b is explicitly assigned to 3; c takes the next integer value after b, so it is 4; d is explicitly assigned 6; e takes the next integer value after d, so it is 7."
What is generic programming and how is it achieved via implementation?,"Generic programming uses templates to define functions that can work with different types of parameters. Template declarations and definitions should be stored in the same header file, not separated into different files."
What is explicit specialization?,"If there is any non-template definition that matches the function call, the non-template version will take precedence over explicit specialization, then template."
Can we separate member declaration and definition in class templates?,"Yes, you can separate declarations and definitions in class templates. Place declarations in a header file (e.g., 'MyClass.h') and definitions in a separate file (e.g., 'MyClass.tpp'). Include the '.tpp' file at the end of the header to ensure the compiler has access to the definitions when the template is instantiated."
Where do we normally place function/member declaration and definition?,Declare in header files and define in source files.
Can we do the same to template declaration and definition?,"Templates are instructions for the compiler to generate class or function definitions, not definitions themselves. Since templates canâ€™t be compiled separately, they must be placed in the header file for any file that uses them. Each specific use of a template is called an instantiation, where the compiler creates a version for each type used in the program."
Can we overload prefix and postfix operators as friends?,Yes.
